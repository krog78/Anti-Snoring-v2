apply plugin: 'com.android.application'

// Instrumented tests// Instrumented tests
tasks.whenTaskAdded { task ->
    if (task.name == 'assembleRelease')
        task.dependsOn('connectedAndroidTest')
}
android {
    compileSdkVersion 27
    buildToolsVersion "26.0.2"
    def versionPropsFile = file('version.properties')
    def versionBuild

    /*Setting default value for versionBuild which is the last incremented value stored in the file */
    if (versionPropsFile.canRead()) {
        Properties versionProps = new Properties()
        versionProps.load(new FileInputStream(versionPropsFile))
        versionBuild = versionProps['VERSION_CODE'].toInteger()
    } else {
        throw new FileNotFoundException("Could not read version.properties!")
    }

    /*Wrapping inside a method avoids auto incrementing on every gradle task run. Now it runs only when we build apk*/
    ext.autoIncrementBuildNumber = {

        if (versionPropsFile.canRead()) {
            Properties versionProps = new Properties()
            versionProps.load(new FileInputStream(versionPropsFile))
            versionBuild = versionProps['VERSION_CODE'].toInteger() + 1
            versionProps['VERSION_CODE'] = versionBuild.toString()
            versionProps.store(versionPropsFile.newWriter(), null)
        } else {
            throw new FileNotFoundException("Could not read version.properties!")
        }
    }

    defaultConfig {
        applicationId "fr.snoring.anti_snoring_v2"
        minSdkVersion 19
        multiDexEnabled true
        targetSdkVersion 27
        versionCode versionBuild
        versionName "1." + versionBuild
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            debuggable true
        }
    }

    // Hook to check if the release/debug task is among the tasks to be executed.
    //Let's make use of it
    gradle.taskGraph.whenReady {taskGraph ->
        if (taskGraph.hasTask(':app:assembleRelease')) { /* when run release task */
            autoIncrementBuildNumber()
        }
    }

    testOptions {
        unitTests.all {
            jvmArgs '-noverify'
        }
    }
    return void
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:27.0.2'
    compile 'com.android.support:support-media-compat:27.0.2'
    compile 'com.android.support:support-v4:27.0.2'
    testCompile 'junit:junit:4.12'
    // Required -- JUnit 4 framework
    testCompile 'org.mockito:mockito-core:1.10.19'
    androidTestCompile 'com.android.support.test.espresso:espresso-core:3.0.1'
    androidTestCompile 'com.android.support.test:runner:1.0.1'
    androidTestCompile 'com.android.support.test.uiautomator:uiautomator-v18:2.1.3'
    compile 'com.google.firebase:firebase-appindexing:11.8.0'
    compile 'com.android.support:multidex:1.0.2'
    // Firebase
    apply plugin: 'com.google.gms.google-services'
}
